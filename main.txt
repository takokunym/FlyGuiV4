local main = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local up = Instance.new("TextButton")
local down = Instance.new("TextButton")
local plus = Instance.new("TextButton")
local mine = Instance.new("TextButton")
local speed = Instance.new("TextLabel")
local onof = Instance.new("TextButton")
local title = Instance.new("TextLabel")
local close = Instance.new("TextButton")
local small = Instance.new("TextButton")
local stopgame = Instance.new("TextButton")

local isWaiting = false

-- GUIの設定
main.Name = "FlyGUIV4"
main.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
main.ResetOnSpawn = false




Frame.Parent = main
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.Size = UDim2.new(0, 200, 0, 150)
Frame.Position = UDim2.new(0.5, -100, 0.5, -75)
Frame.BorderSizePixel = 2

-- ドラッグ機能
Frame.Active = true
Frame.Draggable = true

-- タイトル
title.Name = "Title"
title.Parent = Frame
title.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
title.Size = UDim2.new(1, 0, 0.2, 0)
title.Position = UDim2.new(0, 0, 0, 0)
title.Text = "Fly GUI v4"
title.Font = Enum.Font.SourceSansBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(0, 0, 0)

-- ボタン（UP）
up.Name = "Up"
up.Parent = Frame
up.Size = UDim2.new(0.45, -5, 0.2, 0)
up.Position = UDim2.new(0.05, 0, 0.3, 0)
up.Text = "UP"
up.BackgroundColor3 = Color3.fromRGB(170, 220, 255)
up.Font = Enum.Font.SourceSans
up.TextSize = 16
up.BorderSizePixel = 2

-- ボタン（DOWN）
down.Name = "Down"
down.Parent = Frame
down.Size = UDim2.new(0.45, -5, 0.2, 0)
down.Position = UDim2.new(0.05, 0, 0.55, 0)
down.Text = "DOWN"
down.BackgroundColor3 = Color3.fromRGB(170, 220, 255)
down.Font = Enum.Font.SourceSans
down.TextSize = 16
down.BorderSizePixel = 2

-- ボタン（+）
plus.Name = "Plus"
plus.Parent = Frame
plus.Size = UDim2.new(0.2, 0, 0.2, 0)
plus.Position = UDim2.new(0.55, 5, 0.3, 0)
plus.Text = "+"
plus.BackgroundColor3 = Color3.fromRGB(170, 255, 170)
plus.Font = Enum.Font.SourceSans
plus.TextSize = 18
plus.BorderSizePixel = 2

-- ボタン（-）
mine.Name = "Minus"
mine.Parent = Frame
mine.Size = UDim2.new(0.2, 0, 0.2, 0)
mine.Position = UDim2.new(0.55, 5, 0.55, 0)
mine.Text = "-"
mine.BackgroundColor3 = Color3.fromRGB(255, 170, 170)
mine.Font = Enum.Font.SourceSans
mine.TextSize = 18
mine.BorderSizePixel = 2

-- スピードラベル
speed.Name = "Speed"
speed.Parent = Frame
speed.Size = UDim2.new(0.2, 0, 0.2, 0)
speed.Position = UDim2.new(0.8, 0, 0.3, 0)
speed.Text = "1"
speed.Font = Enum.Font.SourceSans
speed.TextSize = 18
speed.TextColor3 = Color3.fromRGB(0, 0, 0)
speed.BorderSizePixel = 2

-- ON/OFFボタン
onof.Name = "OnOff"
onof.Parent = Frame
onof.Size = UDim2.new(0.4, -5, 0.2, 0)
onof.Position = UDim2.new(0.55, 5, 0.75, 0)
onof.Text = "Fly: OFF"
onof.BackgroundColor3 = Color3.fromRGB(255, 255, 170)
onof.Font = Enum.Font.SourceSans
onof.TextSize = 16
onof.BorderSizePixel = 2

-- 閉じるボタン
close.Name = "Close"
close.Parent = Frame
close.Size = UDim2.new(0.2, 0, 0.2, 0)
close.Position = UDim2.new(1, -40, 0, 0)  -- ここを変更して右寄せにしました
close.Text = "X"
close.BackgroundColor3 = Color3.fromRGB(255, 170, 170)
close.Font = Enum.Font.SourceSans
close.TextSize = 18
close.BorderSizePixel = 2

close.MouseButton1Click:Connect(function()
	if not nowe then  -- 空を飛んでいない状態でのみGUIを閉じる
		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "Fly GUI v4";
			Text = "Thank you for using.";
			Icon = ""})
        main:Destroy()
	else
		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "Fly GUI v4";
			Text = "The GUI cannot be closed while Fly is on.";
			Icon = ""})
    end
end)

-- 最小化ボタン
small.Name = "FullBright"
small.Parent = Frame
small.Size = UDim2.new(0.2, 0, 0.2, 0)
small.Position = UDim2.new(1, -200, 0, 0)  -- ここを変更して右寄せにしました
small.Text = "-"
small.BackgroundColor3 = Color3.fromRGB(255, 255, 170)
small.Font = Enum.Font.SourceSans
small.TextSize = 18
small.BorderSizePixel = 2


local isSmalled = false
-- smallボタンがクリックされたときの処理
small.MouseButton1Click:Connect(function()

	isWaiting = false

	if isSmalled == false then
		Frame.Visible = false
		isSmalled = true

		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "Fly GUI v4";
			Text = "Press right shift to show GUI.";
			Icon = ""})

	end

    
end)

stopgame.Name = "Endgame"
stopgame.Parent = Frame
stopgame.Size = UDim2.new(0.45, -5, 0.2, -1)
stopgame.Position = UDim2.new(0.05, 0, 0.75, 2)
stopgame.Text = "EndGame"
stopgame.BackgroundColor3 = Color3.fromRGB(0,226,180)
stopgame.Font = Enum.Font.SourceSans
stopgame.TextSize = 16
stopgame.BorderSizePixel = 2



stopgame.MouseButton1Click:Connect(function()
	isWaiting = true
	game:GetService("StarterGui"):SetCore("SendNotification", { 
		Title = "Fly GUI v4";
		Text = "Really?Press right shift to exit the game";
		Icon = ""})
	wait(5) -- Robloxでの5秒間の待機
	isWaiting = false
end)


speeds = 1

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

nowe = false

local UserInputService = game:GetService("UserInputService")

-- Function to detect when a key is pressed
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    -- Check if the input is the right Shift key
    if input.KeyCode == Enum.KeyCode.RightShift then
        -- Execute the desired action
        if isSmalled == true then
			Frame.Visible = true
			isSmalled = false
		elseif isWaiting == true then
			game.Players.LocalPlayer:Kick("GameEnd")		
		end
    end
end)

game:GetService("StarterGui"):SetCore("SendNotification", { 
	Title = "Fly GUI v4";
	Text = "Created by MyNuko";
	Icon = ""})
Duration = 5;

Frame.Active = true -- main = gui
Frame.Draggable = true

onof.MouseButton1Down:connect(function()

	if nowe == true then

		onof.Text = "Fly: off"

		nowe = false

		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	else 

		onof.Text = "Fly: on"

		nowe = true



		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
		game.Players.LocalPlayer.Character.Animate.Disabled = true
		local Char = game.Players.LocalPlayer.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Climbing,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Flying,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Landed,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Running,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.RunningNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.StrafingNoPhysics,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end




	if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then



		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", torso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = torso.CFrame
		local bv = Instance.new("BodyVelocity", torso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			game:GetService("RunService").RenderStepped:Wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end
			--	game.Players.LocalPlayer.Character.Animate.Disabled = true
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false




	else
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.UpperTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new("BodyVelocity", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		game.Players.LocalPlayer.Character.Animate.Disabled = false
		tpwalking = false



	end





end)

local tis

up.MouseButton1Down:connect(function()
	tis = up.MouseEnter:connect(function()
		while tis do
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,1,0)
		end
	end)
end)

up.MouseLeave:connect(function()
	if tis then
		tis:Disconnect()
		tis = nil
	end
end)

local dis

down.MouseButton1Down:connect(function()
	dis = down.MouseEnter:connect(function()
		while dis do
			wait()
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0,-1,0)
		end
	end)
end)

down.MouseLeave:connect(function()
	if dis then
		dis:Disconnect()
		dis = nil
	end
end)


game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function(char)
	wait(0.7)
	game.Players.LocalPlayer.Character.Humanoid.PlatformStand = false
	game.Players.LocalPlayer.Character.Animate.Disabled = false

end)


plus.MouseButton1Down:connect(function()
	speeds = speeds + 1
	speed.Text = speeds
	if nowe == true then


		tpwalking = false
		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
	end
end)
mine.MouseButton1Down:connect(function()
	if speeds == 1 then
		speed.Text = '1'
		game:GetService("StarterGui"):SetCore("SendNotification", { 
			Title = "Fly GUI v4";
			Text = "Can not be less than 1";
			Icon = ""})
		wait(1)
		speed.Text = speeds
	else
		speeds = speeds - 1
		speed.Text = speeds
		if nowe == true then
			tpwalking = false
			for i = 1, speeds do
				spawn(function()

					local hb = game:GetService("RunService").Heartbeat	


					tpwalking = true
					local chr = game.Players.LocalPlayer.Character
					local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
					while tpwalking and hb:Wait() and chr and hum and hum.Parent do
						if hum.MoveDirection.Magnitude > 0 then
							chr:TranslateBy(hum.MoveDirection)
						end
					end

				end)
			end
		end
	end
end)
